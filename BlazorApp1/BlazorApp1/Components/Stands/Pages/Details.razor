@page "/stands/details"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using BlazorApp1.Models
@inject IDbContextFactory<BlazorApp1.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Детали о стенде</PageTitle>

<h1>Детали</h1>

<div>
    <h4>Стенд</h4>
    <hr />
    @if (stand is null)
    {
        <p><em>Загрузка...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Название стенда</dt>
            <dd class="col-sm-10">@stand.Name</dd>
            <dt class="col-sm-2">Описание</dt>
            <dd class="col-sm-10">@stand.Description</dd>
            <dt class="col-sm-2">Ссылка на видеопоток</dt>
            <dd class="col-sm-10">@stand.VideoUrl</dd>
            <dt class="col-sm-2">Ansible скрипт</dt>
            <dd class="col-sm-10">@stand.AnsibleScript</dd>
        </dl>
        <div>
            <a href="@($"/stands/edit?id={stand.Id}")">Редактировать стенд</a> |
            <a href="@($"/stands")">Назад к списку стендов</a>
        </div>
    }
</div>

@code {
    Stand? stand;

    [SupplyParameterFromQuery]
    public int ID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        stand = await context.Stand.FirstOrDefaultAsync(m => m.Id == ID);

        if (stand is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
